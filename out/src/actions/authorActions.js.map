{"version":3,"sources":["../../../src/actions/authorActions.js"],"names":[],"mappings":";;;;;QAIgB,kB,GAAA,kB;QAIA,W,GAAA,W;;AARhB;;;;AACA;;IAAY,K;;AACZ;;;;;;AAEO,SAAS,kBAAT,CAA4B,OAA5B,EAAqC;AAC1C,SAAO,EAAC,MAAM,MAAM,oBAAb,EAAmC,gBAAnC,EAAP;AACD;;AAEM,SAAS,WAAT,GAAuB;AAC5B,SAAO,oBAAY;AACjB,aAAS,uCAAT;AACA,WAAO,wBAAU,aAAV,GAA0B,IAA1B,CAA+B,mBAAW;AAC/C,eAAS,mBAAmB,OAAnB,CAAT;AACD,KAFM,EAEJ,KAFI,CAEE,iBAAS;AAChB,YAAM,KAAN;AACD,KAJM,CAAP;AAKD,GAPD;AAQD","file":"authorActions.js","sourcesContent":["import AuthorApi from '../api/mockAuthorApi';\nimport * as types from './actionTypes';\nimport {beginAjaxCall} from './ajaxStatusActions';\n\nexport function loadAuthorsSuccess(authors) {\n  return {type: types.LOAD_AUTHORS_SUCCESS, authors};\n}\n\nexport function loadAuthors() {\n  return dispatch => {\n    dispatch(beginAjaxCall());\n    return AuthorApi.getAllAuthors().then(authors => {\n      dispatch(loadAuthorsSuccess(authors));\n    }).catch(error => {\n      throw(error);\n    });\n  };\n}\n"]}