{"version":3,"sources":["../../../../src/components/course/ManageCoursePage.js"],"names":[],"mappings":"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","file":"ManageCoursePage.js","sourcesContent":["import React, {PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as courseActions from '../../actions/courseActions';\nimport CourseForm from './CourseForm';\n\nclass ManageCoursePage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      course: Object.assign({}, this.props.course),\n      errors: {}\n    };\n\n    this.updateCourseState = this.updateCourseState.bind(this);\n    this.saveCourse = this.saveCourse.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.course.id != nextProps.course.id) {\n      // Necessary to populate form when existing course is loaded directly.\n      this.setState({course: Object.assign({}, nextProps.course)});\n    }\n  }\n\n  updateCourseState(event) {\n    const field = event.target.name;\n    let course = this.state.course;\n    course[field] = event.target.value;\n    return this.setState({course: course});\n  }\n\n  saveCourse(event) {\n    event.preventDefault();\n    this.props.actions.saveCourse(this.state.course);\n    this.context.router.push('/courses');\n  }\n\n  render() {\n    return (\n      <CourseForm\n        allAuthors={this.props.authors}\n        onChange={this.updateCourseState}\n        onSave={this.saveCourse}\n        course={this.state.course}\n        errors={this.state.errors}\n      />\n    );\n  }\n}\n\nManageCoursePage.propTypes = {\n  course: PropTypes.object.isRequired,\n  authors: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// Pull in the React Router context so router is available on this.context.router\nManageCoursePage.contextTypes = {\n  router: PropTypes.object\n};\n\nfunction getCourseById(courses, id) {\n  const course = courses.filter(course => course.id === id);\n  if (course.length) return course[0]; // since this filter returns an array grab first element.\n  return null;\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const courseId = ownProps.params.id;  // from the path '/course:id'\n  let course = {id: '', watchHref: '', title: '', authorId: '', length: '', category: ''};\n\n  if (courseId && state.courses.length) {\n    course = getCourseById(state.courses, courseId);\n  }\n\n  const authorsFormattedForDropdown = state.authors.map(author => {\n    return {\n      value: author.id,\n      text: author.firstName + ' ' + author.lastName\n    };\n  });\n\n  return {\n    course: course,\n    authors: authorsFormattedForDropdown\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(courseActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCoursePage);\n"]}